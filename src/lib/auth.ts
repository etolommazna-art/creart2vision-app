import NextAuth, { NextAuthConfig } from 'next-auth'; import Credentials from 'next-auth/providers/credentials'; import { PrismaAdapter } from '@auth/prisma-adapter'; import { prisma } from './prisma'; import { compare } from 'bcryptjs';
export const authConfig: NextAuthConfig = { adapter: PrismaAdapter(prisma) as any, session:{ strategy:'database' }, providers:[Credentials({ name:'Credentials', credentials:{ email:{label:'Email'}, password:{label:'Mot de passe', type:'password'} }, async authorize(c){ if(!c?.email||!c.password) return null; const u=await prisma.user.findUnique({ where:{ email:c.email } }); if(!u?.passwordHash) return null; const ok=await compare(c.password, u.passwordHash); return ok?{ id:u.id, email:u.email } as any:null; } })], secret: process.env.NEXTAUTH_SECRET };
export const { handlers, auth } = NextAuth(authConfig);
